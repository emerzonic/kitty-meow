{"version":3,"sources":["areas/api/Aggregator.ts","areas/constants.ts","areas/api/api.ts","areas/components/NavBar.tsx","areas/components/CatCard.tsx","areas/components/CatBreedSelector.tsx","areas/components/ExternalLinks.tsx","areas/components/BreedDetailInfo.tsx","areas/components/Row.tsx","areas/components/Characteristics.tsx","areas/components/CatBreedDetail.tsx","areas/components/ActionToggleButton.tsx","areas/CheckBox.tsx","areas/Filters.tsx","areas/Home.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["Aggregator","filters","key","Breed","Gender","Origin","isAdopted","GenderMapping","female","male","getCats","a","cats","getDataFromLocalStorageByKey","length","axios","get","response","data","genders","setDataInLocalStorageWithKey","map","d","gender","Math","floor","random","name","Faker","firstName","getBreedData","breed","origin","url","height","id","width","adoptedDate","console","log","breeds","catBreeds","getCatBreeds","getCatBreedDetail","breedName","breedDetail","find","b","filterCats","values","filter","cat","includes","buildFilters","filterTemplate","Adopted","reduce","result","aggregateBreed","aggregateGender","aggregateOrigin","aggregateAdoption","stringData","localStorage","getItem","JSON","parse","stringify","setItem","defaults","headers","NavBar","Navbar","collapseOnSelect","expand","bg","variant","Brand","href","Toggle","aria-controls","Collapse","CatCard","setAdopted","useState","styles","setStyles","isLoading","setIsLoading","hasBeenAdopted","setHasBeenAdopted","setAdoptedDate","handleSetStyles","adoptedText","buttonText","Card","className","onMouseOver","onMouseLeave","Img","src","Body","Title","Footer","Button","onClick","Date","toLocaleDateString","setTimeout","date","disabled","Spinner","size","animation","CatBreedSelector","props","Form","Group","controlId","Label","Control","as","onChange","e","handleSelectedBreed","target","value","hidden","ExternalLinks","Link","text","BreedDetailInfo","Subtitle","life_span","temperament","weight","imperial","Text","description","cfa_url","wikipedia_url","Row","undefined","rating","Characteristics","Table","responsive","hover","adaptability","affection_level","child_friendly","energy_level","experimental","grooming","hairless","health_issues","hypoallergenic","indoor","intelligence","natural","rare","lap","rex","shedding_level","short_legs","social_needs","stranger_friendly","suppressed_tail","vocalisation","CatBreedDetail","Jumbotron","ActionToggleButton","ToggleButtonGroup","type","view","val","setView","ToggleButton","CheckBox","check","setCheck","ListGroup","Item","checked","filterOption","label","count","Filters","open","setOpen","Accordion","Header","title","eventKey","Object","keys","group","sort","labelText","genderFilter","Home","setBreeds","setCats","setBreedDetail","selectedBreed","setSelectedBreed","setFilters","filterValues","setFilterValues","adopted","handleFiltering","newValues","v","useEffect","catFilters","init","updatedCats","removeItem","addAdoptedCat","callGetCats","callFilterCats","detail","callGetCatBreedDetail","CardColumns","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.75852fee.chunk.js","sourcesContent":["import { LikeNestedObject } from '../../types';\nexport default class Aggregator {\n    static aggregateBreed(filters: LikeNestedObject, key: string) {\n        filters.Breed[key] ? filters.Breed[key]++ : filters.Breed[key] = 1;\n    };\n\n    static aggregateGender(filters: LikeNestedObject, key: string) {\n        filters.Gender[key] ? filters.Gender[key]++ : filters.Gender[key] = 1;\n    };\n\n    static aggregateOrigin(filters: LikeNestedObject, key: string) {\n        filters.Origin[key] ? filters.Origin[key]++ :filters.Origin[key] = 1;\n    }\n\n    static aggregateAdoption(filters: LikeNestedObject, isAdopted: boolean) {\n        if (isAdopted) {\n            filters[\"Adoption Status\"]['Adopted']++;\n        }\n        else {\n            filters[\"Adoption Status\"]['Not Adopted']++;\n        }\n    }\n}\n","import { LikeStringValueObject } from \"../types\";\n\nexport const GenderMapping ={\n    female: 'Female',\n    male: 'Male'\n} as LikeStringValueObject;","import axios from 'axios';\nimport { Breed, Cat, LikeStringValueObject } from '../../types';\nimport Faker from 'faker';\nimport Aggregator  from './Aggregator';\nimport { GenderMapping } from '../constants';\naxios.defaults.headers['x-api-key'] = 'ccef54e7-98da-4c95-810d-47f3079fe24a';\n\nexport async function getCats() {\n    let cats = [];\n\ttry {\n        cats = getDataFromLocalStorageByKey('cat-list');\n\n        if (cats.length) {\n\t\t\treturn cats;\n        }\n        \n\t\tconst response = await axios.get('https://api.thecatapi.com/v1/images/search?limit=100&page=1&order=Desc');\n        \n        if (!response.data) {\n            return cats;\n        }\n\n        const genders = ['female', 'male'];\n        cats = response.data.map((d:any) => {\n            const gender = genders[Math.floor(Math.random() * genders.length)];\n            const name = Faker.name.firstName(gender === 'male' ? 1 : 2);\n            const {origin, breed} = getBreedData(d.breed);\n            return {\n                origin,\n                breed,\n                gender,\n                name,\n                url: d.url,\n                height:d.height,\n                id: d.id,\n                width: d.width,\n                isAdopted: false,\n                adoptedDate: null\n            };\n        });\n        setDataInLocalStorageWithKey('cat-list', cats);\n        return cats;\n\t} catch (error) {\n        console.log(error)\n\t}\n}\n\nfunction getBreedData(breeds:any[]):LikeStringValueObject{\n    if (breeds?.length) {\n        const breed = breeds[0];\n        return {\n            breed :breed.name , \n            origin: breed.origin\n        };\n    }\n    const catBreeds:Breed[] = getDataFromLocalStorageByKey('cat-breeds-details');\n    const breed: any = catBreeds[Math.floor(Math.random() * catBreeds.length)]; \n    return {\n        breed :breed.name, \n        origin: breed.origin\n    };\n}\n\nexport async function getCatBreeds() {\n\ttry {\n\t\tconst breeds:Breed[] = getDataFromLocalStorageByKey('cat-breeds-details');\n        \n        if (breeds.length) {\n\t\t\treturn breeds;\n        }\n        \n\t\tconst response = await axios.get('https://api.thecatapi.com/v1/breeds');\n        setDataInLocalStorageWithKey('cat-breeds-details',response.data);\n        return response.data;\n\t} catch (error) {\n\t\tconsole.log(error)\n\t}\n}\nexport async function getCatBreedDetail(breedName: string) {\n\ttry {\n        const breeds: Breed[] = getDataFromLocalStorageByKey('cat-breeds-details');\n        const breedDetail = breeds.find(b => b.name === breedName);\n        \n        if (breedDetail) {\n            return breedDetail;\n        }\n        \n        const response = await axios.get(`https://api.thecatapi.com/v1/breeds/search?q=${breedName}`);\n\t\treturn response.data?.[0];\n\t} catch (error) {\n\t\tconsole.log(error)\n\t}\n}\nexport function filterCats(values: string[]) {\n        const cats: Cat[] = getDataFromLocalStorageByKey('cat-list');\n        const filteredCats = cats.filter(cat => {\n            const matched = values.includes(cat.breed) ||\n                            values.includes(GenderMapping[cat.gender]) ||\n                            values.includes(cat.origin) ||\n                            (values.includes('Adopted') && cat.isAdopted) ||\n                            (values.includes('Not Adopted') && !cat.isAdopted);\n            return matched;\n        });\n        \n\t\treturn filteredCats;\n}\n\nexport function addAdoptedCat(adopted: {date:string, id:string}) {\n        const cats: Cat[] = getDataFromLocalStorageByKey('cat-list');\n        const updatedCats = cats.map(cat=>{\n            if (cat.id === adopted.id) {\n                cat.isAdopted = true;\n                cat.adoptedDate = adopted.date;\n            }\n            return cat;\n        })\n        localStorage.removeItem('cat-list');\n        setDataInLocalStorageWithKey('cat-list', updatedCats);\n}\n\nexport function buildFilters(cats:Cat[]){\n\tconst filterTemplate = {\n\t\tBreed: {}, \n\t\tGender: {},\n\t\tOrigin: {},\n\t\t'Adoption Status': { Adopted: 0, 'Not Adopted': 0 },\n\t};\n\n\tif (!cats?.length) {\n\t\treturn filterTemplate;\n\t}\n\n\treturn cats.reduce((result, cat) => {\n\t\tAggregator.aggregateBreed(result, cat.breed);\n\t\tAggregator.aggregateGender(result, cat.gender);\n\t\tAggregator.aggregateOrigin(result, cat.origin);\n\t\tAggregator.aggregateAdoption(result, cat.isAdopted);\n\t\treturn result;\n\t}, filterTemplate);\n}\n\nfunction getDataFromLocalStorageByKey(key: string) {\n\tconst stringData = localStorage.getItem(key);\n\tif (!stringData) {\n\t\treturn [];\n\t}\n\treturn JSON.parse(stringData);\n}\n\nfunction setDataInLocalStorageWithKey(key: string, data: any) {\n\tconst stringData = JSON.stringify(data);\n\tlocalStorage.setItem(key, stringData);\n}\n","import React from 'react';\nimport { Navbar } from \"react-bootstrap\";\n\nexport default function NavBar() {\n  return (\n    <div>\n      <Navbar collapseOnSelect expand=\"lg\" bg=\"dark\" variant=\"dark\">\n        <Navbar.Brand href=\"#home\">Cats App</Navbar.Brand>\n        <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n        <Navbar.Collapse id=\"responsive-navbar-nav\"></Navbar.Collapse>\n      </Navbar>\n    </div>\n  )\n}\n","import React, { useState, SetStateAction, Dispatch } from 'react';\nimport { Card, Button, Spinner } from \"react-bootstrap\";\nimport { Cat } from \"../../types\";\nimport { GenderMapping } from '../constants';\n\ninterface CatCardProps {\n  setAdopted: Dispatch<SetStateAction<{ id: string, date: string }>>;\n  cat: Cat;\n}\nexport default function CatCard({cat, setAdopted}: CatCardProps) {\n  const [styles, setStyles] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [hasBeenAdopted, setHasBeenAdopted] = useState(false);\n  const [adoptedDate, setAdoptedDate] = useState('');\n\n  const handleSetStyles = () => {\n    styles ?\n      setStyles('') :\n      setStyles('shadow-lg');\n  }\n\n  const handleOnclick = () => {\n    const adoptedDate = new Date().toLocaleDateString();\n    setIsLoading(true);\n    setTimeout(() => {\n      setAdopted({ date: adoptedDate, id: cat.id });\n      setAdoptedDate(adoptedDate);\n      setHasBeenAdopted(true);\n      setIsLoading(false);\n    }, 3000);\n\n  }\n\n  const isAdopted = cat.isAdopted;\n  const adoptedText = `Adopted on ${adoptedDate || cat.adoptedDate}`;\n  const buttonText = isAdopted || hasBeenAdopted ? adoptedText : `Adopt ${cat.name}`;\n\n  return (\n    <Card key={cat.id} className={`text-left ${styles}`} onMouseOver={handleSetStyles} onMouseLeave={handleSetStyles}>\n      <Card.Img variant=\"top\" src={cat.url} />\n      <Card.Body>\n        <Card.Title>Name: {cat.name}</Card.Title>\n        <hr className=\"my-1\"/>\n        <p className=\"mb-1\">Breed: {cat.breed}</p>\n        <p className=\"mb-1\">Origin: {cat.origin}</p>\n        <p className=\"mb-1\">Genger: {GenderMapping[cat.gender]}</p>\n        <p className=\"mb-1\">Body: Height {cat.height} Width {cat.width}</p>\n      </Card.Body>\n      <Card.Footer>\n        <Button onClick={handleOnclick} disabled={isAdopted || hasBeenAdopted} className=\"w-100\">\n          {isLoading ? <Spinner className=\"mr-2\" size=\"sm\" animation=\"border\" /> : null}\n          {isLoading ? 'Processing...' : buttonText}\n        </Button>\n      </Card.Footer>\n    </Card>\n  )\n}\n","import React, { Dispatch, SetStateAction } from 'react';\nimport { Form } from \"react-bootstrap\";\nimport { Breed } from '../../types';\n\ninterface CatBreedProps {\n    breeds: Breed[];\n    handleSelectedBreed: Dispatch<SetStateAction<string>>\n}\nexport default function CatBreedSelector(props: CatBreedProps) {\n\n    const handleSelect = (e: React.ChangeEvent<HTMLSelectElement>) => {\n        props.handleSelectedBreed(e.target.value);\n    };\n\n    return (\n        <div>\n            <Form>\n                <Form.Group controlId=\"exampleForm.ControlSelect1\">\n                    <Form.Label className=\"text-left h5 mt-sm-2\">Cat Breeds</Form.Label>\n                    <Form.Control as=\"select\" onChange={handleSelect} >\n                        <option hidden value=\"Select a breed...\">Select a breed...</option>\n                        {props.breeds.map(b => (\n                            <option\n                                key={b.id}\n                                value={b.name}\n                            >\n                                {b.name}\n                            </option>\n                        ))\n                        }\n                    </Form.Control>\n                </Form.Group>\n            </Form>\n        </div>\n    )\n}\n","import React from 'react';\nimport { Card } from \"react-bootstrap\";\nexport default function ExternalLinks(props: { url?: string; text: string; }) {\n\n    if (!props.url) {\n        return null;\n    }\n\n    return (\n        <Card.Link\n            target=\"_blank\"\n            href={props.url}\n        >\n            {props.text}\n        </Card.Link>\n    );\n}\n","import React from 'react';\nimport {Card } from \"react-bootstrap\";\nimport { Breed } from '../../types';\nimport ExternalLinks from './ExternalLinks';\n\nexport default function BreedDetailInfo(props:Breed) {\n    return (\n        <Card className=\"text-left bg-transparent shadow-sm\">\n        <Card.Body className=\"mt-sm-4\">\n            <Card.Title>{props.origin}</Card.Title>\n            <Card.Subtitle className=\"mb-2 text-muted\">Origin</Card.Subtitle>\n            <Card.Title>{props.life_span} years</Card.Title>\n            <Card.Subtitle className=\"mb-2 text-muted\">Life Span</Card.Subtitle>\n            <Card.Title>{props.temperament}</Card.Title>\n            <Card.Subtitle className=\"mb-2 text-muted\">Temperament</Card.Subtitle>\n            <Card.Title>Imperial: {props.weight?.imperial}, Metric: {props.weight?.imperial}</Card.Title>\n            <Card.Subtitle className=\"mb-2 text-muted\">Weight</Card.Subtitle>\n            <hr />\n            <Card.Subtitle className=\"mb-2 text-muted\">Description</Card.Subtitle>\n            <Card.Text>{props.description}</Card.Text>\n            <hr />\n            <Card.Subtitle className=\"mb-2 text-muted\">External Links</Card.Subtitle>\n            <ExternalLinks url={props.cfa_url} text={`Read More about ${props.name}`}/>\n            <ExternalLinks url={props.wikipedia_url} text=\"Wikipedia\"/>\n        </Card.Body>\n    </Card>\n    )\n}\n","import React from 'react';\nexport default function Row(props: { name: string; rating?: number; }) {\n    if (props.rating === undefined) {\n        return null;\n    }\n    return (\n        <tr>\n            <td>{props.name}</td>\n            <td>{props.rating}</td>\n        </tr>\n    );\n}\n","import React from 'react';\nimport {Card, Table } from \"react-bootstrap\";\nimport { Breed } from '../../types';\nimport Row from './Row';\n\nexport default function Characteristics(props:Breed) {\n    return (\n        <Card className=\"text-left bg-transparent shadow-sm\">\n        <Card.Body>\n            <Table responsive hover className=\"text-left\" size=\"sm\">\n                <thead>\n                    <tr>\n                        <th>Charateristic</th>\n                        <th>Rating</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    <Row name=\"Adaptability\" rating={props.adaptability} />\n                    <Row name=\"Affection Level\" rating={props.affection_level} />\n                    <Row name=\"Child Friendly\" rating={props.child_friendly} />\n                    <Row name=\"Energy Level\" rating={props.energy_level} />\n                    <Row name=\"Experimental\" rating={props.experimental} />\n                    <Row name=\"Grooming\" rating={props.grooming} />\n                    <Row name=\"Hairless\" rating={props.hairless} />\n                    <Row name=\"Health Issues\" rating={props.health_issues} />\n                    <Row name=\"Hypoallergenic\" rating={props.hypoallergenic} />\n                    <Row name=\"Indoor\" rating={props.indoor} />\n                    <Row name=\"Intelligence\" rating={props.intelligence} />\n                    <Row name=\"Natural\" rating={props.natural} />\n                    <Row name=\"Rare\" rating={props.rare} />\n                    <Row name=\"Lap\" rating={props.lap} />\n                    <Row name=\"Rex\" rating={props.rex} />\n                    <Row name=\"Shedding Level\" rating={props.shedding_level} />\n                    <Row name=\"Short Legs\" rating={props.short_legs} />\n                    <Row name=\"Social Needs\" rating={props.social_needs} />\n                    <Row name=\"Stranger Friendly\" rating={props.stranger_friendly} />\n                    <Row name=\"Suppressed Tail\" rating={props.suppressed_tail} />\n                    <Row name=\"Vocalisation\" rating={props.vocalisation} />\n                </tbody>\n            </Table>\n        </Card.Body>\n    </Card>\n    )\n}\n","import React from 'react'\nimport { Breed } from '../../types';\nimport { Jumbotron } from \"react-bootstrap\";\nimport BreedDetailInfo from './BreedDetailInfo';\nimport Characteristics from './Characteristics';\n\n\nexport default function CatBreedDetail(props: Breed) {\n    return (\n        <Jumbotron className=\"w-100\">\n            {props.id ? (\n                <>\n                    <div className=\"row\">\n                        <div className=\"col-12\">\n                            <h1 className=\"text-left\">{props.name}</h1>\n                            <h4 className=\"text-left\">Breed</h4>\n                        </div>\n                    </div>\n                    <div className=\"row\">\n                        <div className=\"col-md-6\">\n                            <Characteristics {...props} />\n                        </div>\n                        <div className=\"col-md-6\">\n                            <BreedDetailInfo {...props} />\n                        </div>\n                    </div>\n                </>) :\n                (<h4 className=\"h3 text-center\">Select a breed from the dropdown</h4>)\n            }\n        </Jumbotron>\n    )\n}\n","import React, { Dispatch, SetStateAction } from 'react';\nimport { ToggleButtonGroup, ToggleButton } from 'react-bootstrap';\n\ninterface ActionToggleButtonProps {\n    setView: Dispatch<SetStateAction<string>>;\n    view: string;\n}\n\nexport default function ActionToggleButton(props: ActionToggleButtonProps) {\n    const handleChange = (val: any) => props.setView(val);\n\n    return (\n        <div>\n            <h4 className=\"text-left h5 mt-2\">What will you like to do?</h4>\n            <ToggleButtonGroup className=\"w-100\" type=\"radio\" name=\"toggle\" value={props.view} onChange={handleChange}>\n                <ToggleButton className=\"mx-sm-1 ml-md-0\" name=\"adopt\" value={'adopt'}>Adopt</ToggleButton>\n                <ToggleButton className=\"mx-sm-1 mr-md-0\" name=\"learn\" value={'learn'}>Learn</ToggleButton>\n            </ToggleButtonGroup>\n        </div>\n\n    );\n}\n","import React, { useState } from 'react';\nimport { ListGroup } from 'react-bootstrap';\n\ntype CheckBoxProps = {\n    label: string;\n    count: number;\n    filterOption: (e: any) => void;\n};\nexport default function CheckBox(props: CheckBoxProps){\n    const [check, setCheck] = useState<boolean>(false);\n\n    const handleCheck = (e: React.ChangeEvent<HTMLInputElement>) => {\n        setCheck(e.target.checked);\n        props.filterOption(e);\n    };\n\n    return (\n        <ListGroup.Item className=\"px-2 py-1\">\n            <label className=\"m-0\">\n                <input\n                    checked={check}\n                    onChange={handleCheck}\n                    className=\"mr-2\"\n                    type=\"checkbox\"\n                    value={props.label} />\n                {props.label} ({props.count})\n        </label>\n        </ListGroup.Item>\n    );\n};\n","import React, { useState } from 'react';\nimport { Card, ListGroup, Accordion, Button } from 'react-bootstrap';\nimport CheckBox from './CheckBox';\nimport { MdKeyboardArrowDown, MdKeyboardArrowUp } from \"react-icons/md\";\nimport { LikeStringValueObject } from '../types';\nimport { GenderMapping } from './constants';\n\nexport interface FilterProps {\n    filterOption: (e: any) => void,\n    group: any;\n    title: string;\n}\n\nexport default function Filters(props: FilterProps) {\n    const [open, setOpen] = useState(false);\n    \n    return (\n        <Accordion className=\"my-2\">\n            <Card>\n                <Card.Header className=\"p-2 d-flex justify-content-between\">\n                    <h6 className=\"h6 mb-0 p-1\"> {props.title}</h6>\n                    <Accordion.Toggle className=\"p-0\" as={Button} onClick={() => setOpen(!open)} variant=\"link\" eventKey={props.title}>\n                        {open ?\n                            <MdKeyboardArrowUp className=\"h3 mb-0 p-0\" /> :\n                            <MdKeyboardArrowDown className=\"h3 mb-0 p-0\" />\n                        }\n                    </Accordion.Toggle>\n                </Card.Header>\n                <Accordion.Collapse eventKey={props.title}>\n                    <Card.Body className=\"p-0 filter-body\">\n                        <ListGroup className=\"border-0\">\n                            {Object.keys(props.group).sort()\n                                .map((label: string) => {\n                                    let labelText = label;\n                                    const genderFilter = GenderMapping[label];\n                                    if (genderFilter) {\n                                        labelText = genderFilter;\n                                    }\n                                    const count: number = props.group[label];\n                                    return (<CheckBox\n                                        key={labelText}\n                                        label={labelText}\n                                        count={count}\n                                        filterOption={props.filterOption} />\n                                    );\n                                })}\n                        </ListGroup>\n                    </Card.Body>\n                </Accordion.Collapse>\n            </Card>\n        </Accordion>\n    );\n};\n","import React, { useEffect, useState } from 'react';\nimport { getCats, getCatBreeds, getCatBreedDetail, filterCats, addAdoptedCat, buildFilters } from './api/api';\nimport { CardColumns } from 'react-bootstrap';\nimport { Cat, Breed, LikeNestedObject } from '../types';\nimport NavBar from './components/NavBar';\nimport CatCard from './components/CatCard';\nimport CatBreedSelector from './components/CatBreedSelector';\nimport CatBreedDetail from './components/CatBreedDetail';\nimport ActionToggleButton from './components/ActionToggleButton';\nimport Filters from './Filters';\n\nexport default function Home() {\n\tconst [breeds, setBreeds] = useState<Breed[]>([]);\n\tconst [cats, setCats] = useState<Cat[]>([]);\n\tconst [breedDetail, setBreedDetail] = useState<Breed>({});\n\tconst [selectedBreed, setSelectedBreed] = useState<string>('');\n\tconst [view, setView] = useState<string>('adopt');\n\n\tconst initial = {\n\t\tBreed: {},\n\t\tGender: {},\n\t\tOrigin: {},\n\t\t'Adoption Status': { Adopted: 0, 'Not Adopted': 0 },\n\t};\n\tconst [filters, setFilters] = useState<LikeNestedObject>(initial);\n\tconst [filterValues, setFilterValues] = useState<string[]>([]);\n\tconst [adopted, setAdopted] = useState<{ date: string, id: string }>({ id: '', date: '' });\n\n\tconst handleFiltering = (e: React.ChangeEvent<HTMLInputElement>) => {\n\t\tconst value = e.target.value;\n\t\tif (e.target.checked) {\n\t\t\tsetFilterValues([...filterValues, value]);\n\t\t} else {\n\t\t\tconst newValues = filterValues.filter(v => v !== value);\n\t\t\tsetFilterValues(newValues);\n\t\t}\n\t}\n\n\tuseEffect(() => {\n\t\tconst init = async () => {\n\t\t\tconst catBreeds: Breed[] = await getCatBreeds();\n\t\t\tsetBreeds(catBreeds);\n\t\t\tconst cats: Cat[] = await getCats();\n\t\t\tif (cats?.length) {\n\t\t\t\tconst catFilters = buildFilters(cats);\n\t\t\t\tsetFilters(catFilters);\n\t\t\t\tsetCats(cats);\n\t\t\t}\n\t\t};\n\t\tinit();\n\t}, []);\n\n\tuseEffect(() => {\n\t\tif (adopted.id) {\n\t\t\taddAdoptedCat(adopted);\n\t\t\tconst callGetCats = async () => {\n\t\t\t\tconst cats: Cat[] = await getCats();\n\t\t\t\tconst catFilters = buildFilters(cats);\n\t\t\t\tsetFilters(catFilters);\n\t\t\t\tsetCats(cats);\n\t\t\t};\n\t\t\tcallGetCats();\n\t\t}\n\t}, [adopted]);\n\n\tuseEffect(() => {\n\t\tconst callFilterCats = async () => {\n\t\t\tlet cats: Cat[] = [];\n\t\t\tif (filterValues.length) {\n\t\t\t\tcats = filterCats(filterValues);\n\t\t\t} else {\n\t\t\t\tcats = await getCats();\n\t\t\t}\n\t\t\tconst catFilters = buildFilters(cats);\n\t\t\tsetFilters(catFilters);\n\t\t\tsetCats(cats);\n\t\t}\n\t\tcallFilterCats();\n\t}, [filterValues]);\n\n\tuseEffect(() => {\n\t\tif (selectedBreed || view === 'learn') {\n\t\t\tconst callGetCatBreedDetail = async () => {\n\t\t\t\tconst detail: Breed = await getCatBreedDetail(selectedBreed);\n\t\t\t\tsetBreedDetail(detail);\n\t\t\t};\n\t\t\tcallGetCatBreedDetail();\n\t\t}\n\t}, [selectedBreed, view]);\n\n\tconst adoptStyle = 'col-md-9 col-sm-12';\n\tconst learnStyle = 'col-sm-12';\n\t\n\treturn (\n\t\t<div className=\"\">\n\t\t\t<NavBar />\n\t\t\t<div className=\"container-fluid\">\n\t\t\t\t<div className=\"row\">\n\t\t\t\t\t<div className=\"col-lg-3 col-md-3 col-sm-12 mt-md-5 mt-sm-2\">\n\t\t\t\t\t\t<ActionToggleButton view={view} setView={setView} />\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"col-md-9 mt-md-5 mt-sm-2\">\n\t\t\t\t\t\t{view === \"learn\" && <CatBreedSelector breeds={breeds} handleSelectedBreed={setSelectedBreed} />}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"row\">\n\t\t\t\t\t{view === \"adopt\" && <div className=\"col-md-3 col-sm-12\">\n\t\t\t\t\t\t<h4 className=\"p-2 mt-2 bg-light shadow-sm border\">Filters</h4>\n\t\t\t\t\t\t<div className=\"w-100\">\n\t\t\t\t\t\t\t<Filters filterOption={handleFiltering} group={filters.Breed} title=\"Breed\" />\n\t\t\t\t\t\t\t<Filters filterOption={handleFiltering} group={filters.Gender} title=\"Gender\" />\n\t\t\t\t\t\t\t<Filters filterOption={handleFiltering} group={filters.Origin} title=\"Origin\" />\n\t\t\t\t\t\t\t<Filters filterOption={handleFiltering} group={filters[\"Adoption Status\"]} title=\"Adoption Status\" />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>}\n\t\t\t\t\t<div className={view === 'adopt' ? adoptStyle : learnStyle}>\n\t\t\t\t\t\t{view === \"adopt\" && (\n\t\t\t\t\t\t\t<CardColumns>{cats?.map((cat) => <CatCard key={cat.id} cat={cat} setAdopted={setAdopted} />)}</CardColumns>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t{view === \"learn\" && <CatBreedDetail {...breedDetail} />}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n","import React from 'react';\nimport Home from './areas/Home';\nimport './App.css';\n\nfunction App() {\n  return (\n    <Home />\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}